{"version":3,"sources":["JobCard.js","App.js","ThemeContext.js","Background.js","ThemeToggle.js","index.js"],"names":["CardComponent","text","click","clickText","className","onClick","JobCard","state","isFlipped","handleClick","bind","e","preventDefault","this","setState","prevState","props","job","title","description","links","flipDirection","flipSpeedBackToFront","flipSpeedFrontToBack","Component","experience","App","map","el","getInitialTheme","window","localStorage","storedPrefs","getItem","matchMedia","matches","ThemeContext","React","createContext","ThemeProvider","initialTheme","children","useState","theme","setTheme","rawSetTheme","rawTheme","root","document","documentElement","isDark","classList","remove","add","setItem","useEffect","Provider","value","Background","Toggle","useContext","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b75197b0.chunk.js","sourcesContent":["import { Component } from 'react'\nimport ReactCardFlip from 'react-card-flip';\n\nconst CardComponent = ({text, click, clickText}) => {\n    return (\n        <div className=\"p-5 w-full dark:text-white\">\n            <h1>{text}</h1>\n            <button onClick={click}>{clickText}</button>\n        </div>\n    )\n}\n\nexport default class JobCard extends Component {\n    constructor() {\n      super();\n        this.state = {\n        isFlipped: false\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n  \n    handleClick(e) {\n      e.preventDefault();\n      this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n    }\n    \n    render() {\n      const { title, description, links } = this.props.job\n      return (\n        <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\" flipSpeedBackToFront=\".1\" flipSpeedFrontToBack=\".1\">\n          <CardComponent text={title} click={e => this.handleClick(e)} clickText=\"&#9660;\" />\n          <CardComponent text={description} click={e => this.handleClick(e)} clickText=\"&#9650;\" />\n        </ReactCardFlip>\n      )\n    }\n  }","import './App.css';\nimport JobCard from './JobCard'\n\nconst experience = [\n  { \n    title: 'MoveOn.org 2017-2019', \n    description: 'Full stack engineer focused on mobile campaigning. Work included being project lead for Spoke, an open source peer to peer texting tool',\n    links: ['https://github.com/moveonorg/spoke']\n  },\n  {\n   title: 'UpTogether 2019-2021',\n  description: 'Full stack engineer supporting communities, government agencies and philanthropists to distribute cash transfers and spark social capital exchange.',\n  links: ['https://uptogether.org'],\n  },\n  {\n    title: 'The New York Times 2021-present',\n   description: 'Software engineer working on NYT Games including NYT Crossword Puzzle, Spelling Bee, etc.',\n   links: [],\n   },\n]\n\nfunction App() {\n  return (\n    <div className=\"App dark:bg-black dark:text-white\" >\n      <header className=\"App-header\">\n        <h1 className=\"text-3xl\">Shaka Clark</h1>\n        <p>Social Justice Oriented Software Engineer</p>\n        <hr />\n        { experience.map(el => {\n          return (<JobCard job={el} key={el.title} />)\n        })}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nconst getInitialTheme = () => {\n    if (typeof window !== 'undefined' && window.localStorage) {\n        const storedPrefs = window.localStorage.getItem('color-theme');\n        if (typeof storedPrefs === 'string') {\n            return storedPrefs;\n        }\n\n        const userMedia = window.matchMedia('(prefers-color-scheme: dark)');\n        if (userMedia.matches) {\n            return 'dark';\n        }\n    }\n\n    return 'light' // light theme as the default;\n};\n\nexport const ThemeContext = React.createContext();\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n    const [theme, setTheme] = React.useState(getInitialTheme);\n\n    const rawSetTheme = (rawTheme) => {\n        const root = window.document.documentElement;\n        const isDark = rawTheme === 'dark';\n\n        root.classList.remove(isDark ? 'light' : 'dark');\n        root.classList.add(rawTheme);\n\n        localStorage.setItem('color-theme', rawTheme);\n    };\n\n    if (initialTheme) {\n        rawSetTheme(initialTheme);\n    }\n\n    React.useEffect(() => {\n        rawSetTheme(theme);\n    }, [theme]);\n\n    return (\n        <ThemeContext.Provider value={{ theme, setTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};","import React from 'react';\n\nconst Background = ( { children } ) =>\n{\n    return (\n       \n        <span className=\"bg-white dark:bg-black\">\n            {children}\n        </span>\n    )\n}\n\nexport default Background;","import React from 'react';\nimport { FaSun, FaMoon } from \"react-icons/fa\";\nimport { ThemeContext } from './ThemeContext';\n\nconst Toggle = () => {\n    const { theme, setTheme } = React.useContext(ThemeContext);\n\n    return (\n        <div className=\"transition duration-500 ease-in-out rounded-full p-2\">\n            {theme === 'dark' ? (\n                <FaSun\n                    onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n                    className=\"text-yellow-400 dark:text-yellow-400 text-2xl cursor-pointer\"\n                />\n            ) : (\n                    <FaMoon\n                        onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n                        className=\"text-black-400 dark:text-yellow-400 text-2xl cursor-pointer\"\n                    />\n                )}\n        </div>\n    );\n};\n\nexport default Toggle;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './ThemeContext';\nimport Background from './Background';\nimport Toggle from './ThemeToggle';\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <ThemeProvider>\n      <Background>\n         <div className=\"absolute right-0 top-0 mr-4 mt-4 md:mr-6 md:mt-6\">\n            <Toggle />\n          </div>\n       \n        <App />\n          </Background>\n    </ThemeProvider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}